<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition template="/applayout/pageTemplate.xhtml" xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:b="http://bootsfaces.net/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets">

            <ui:define name="content">
                <style>td {padding: 8px;}</style>
                <h1>Switch (&lt;b:switch /&gt;) <b:badge value="since 0.8.0" /></h1>
                               
                <p>Switches are very simple input widgets for binary choice. They are particularly useful for mobile devices.</p>
                <p>&lt;b:switch&gt; makes the Bootstrap style of displaying switches available to JSF programmers.</p>
                <h1>Basic usage</h1>
				<b:tabView>
                    <b:tab title="live demo">
                        <h:form>
                            <b:switch value="#{settingsBean.checkbox1}" caption="switch 1" />
                        </h:form>
                    </b:tab>
				    <b:tab title="JSF markup">
				       <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
                          <![CDATA[
                          <h:form>
                              <b:switch value="&#35;{settingsBean.checkbox1}" caption="checkbox 1"/>
                          </h:form>
                          ]]>
                       </script>
				    </b:tab>
				</b:tabView>
                
                
				<br />
				<h1>Reference section</h1>
                
              <b:panel look="info">
				<f:facet name="heading">
					<b>Attributes of &lt;b:selectBooleanCheckbox &gt;</b>
				</f:facet>
					<table class="table table-striped table-hover"
						style="background-color: #fff">
						<thead>
							<tr>
								<th>Attribute</th>
								<th>Default value</th>
								<th>Description</th>
							</tr>
						</thead>
						<tbody>
							<tr>
								<td>caption</td>
								<td>(none)</td>
								<td>The caption is the text rendered behind the checkbox.</td>
							</tr>
							<tr>
								<td>label</td>
								<td>(none)</td>
								<td>This attribute is optional. If you provide it, the checkbox is preceded by a <a target="#" href="http://getbootstrap.com/components/#labels">Bootstrap label</a>.</td>
							</tr>
							<tr>
								<td>value</td>
								<td>(none)</td>
								<td>The EL expression connecting the checkbox to a JSF bean.</td>
							</tr>
							<tr>
								<td>id</td>
								<td>(none)</td>
								<td>Unique identifier of the component.</td>
							</tr>
							<tr>
								<td>styleClass</td>
								<td>(none)</td>
								<td>CSS class</td>
							</tr>
							<tr>
								<td>span</td>
								<td>(none)</td>
								<td>Influences the width of the checkbox, measured by Bootstrap cells. Legal values are 1-12. As of BootsFaces 0.6, the generated CSS class is always medium size (<code>col-md-1</code> - <code>col-md-12</code>).</td>
							</tr>
							<tr>
								<td>fieldSize</td>
								<td>(none)</td>
								<td>Influences the height of the checkbox. If fieldSize is set, the attribute <code>input-{{fieldSize}}</code> is added to the CSS classes. Legal values are <code>sm</code> and <code>lg</code>.</td>
							</tr>
							<tr>
								<td>renderLabel</td>
								<td>true</td>
								<td>By default, BootsFaces generates a label if the label attribute is set. However, AngularFaces generates labels, too, so you have to decide
								whether you which label you need (if you use both frameworks). renderLabel="false" is automatically set by AngularFaces if it generates
								labels automatically.</td>
							</tr>
							<ui:remove>
							<!-- 
							<tr>
								<td>readonly</td>
								<td>(none)</td>
								<td>Takes a boolean value. For the difference between readonly and disabled see <a target="#" href="http://www.w3.org/TR/html4/interact/forms.html#h-17.12">the definition by w3c.org</a>.</td>
							</tr>
							 -->
							</ui:remove>
							<tr>
								<td>disabled</td>
								<td>(none)</td>
								<td>Takes a boolean value. For the difference between readonly and disabled see <a target="#" href="http://www.w3.org/TR/html4/interact/forms.html#h-17.12">the definition by w3c.org</a>.</td>
							</tr>
							<tr>
								<td>accesskey</td>
								<td>(none)</td>
								<td>Standard HTML attribute</td>
							</tr>
							<tr>
								<td>title</td>
								<td>(none)</td>
								<td>Standard HTML attribute</td>
							</tr>
							<tr>
								<td>alt</td>
								<td>(none)</td>
								<td>Standard HTML attribute</td>
							</tr>
							<tr>
								<td>lang</td>
								<td>(none)</td>
								<td>Standard HTML attribute</td>
							</tr>
							<tr>
								<td>tabindex</td>
								<td>(none)</td>
								<td>Determines in which order element get the focus when activated via the TAB or Shift+TAB key.</td>
							</tr>
							<tr>
								<td>title</td>
								<td>(none)</td>
								<td></td>
							</tr>
							<tr>
								<td>style</td>
								<td>(none)</td>
								<td>CSS style.</td>
							</tr>
							<tr>
								<td>onclick</td>
								<td>(none)</td>
								<td>Javascript event handler.</td>
							</tr>
							<tr>
								<td>ondblclick</td>
								<td>(none)</td>
								<td>Javascript event handler.</td>
							</tr>
							<tr>
								<td>onblur</td>
								<td>(none)</td>
								<td>Javascript event handler.</td>
							</tr>
							<tr>
								<td>onmousedown</td>
								<td>(none)</td>
								<td>Javascript event handler.</td>
							</tr>
							<tr>
								<td>onmousemove</td>
								<td>(none)</td>
								<td>Javascript event handler.</td>
							</tr>
							<tr>
								<td>onmouseout</td>
								<td>(none)</td>
								<td>Javascript event handler.</td>
							</tr>
							<tr>
								<td>onmouseover</td>
								<td>(none)</td>
								<td>Javascript event handler.</td>
							</tr>
							<tr>
								<td>onmouseup</td>
								<td>(none)</td>
								<td>Javascript event handler.</td>
							</tr>
						</tbody>
					</table>
			</b:panel>
            <b:panel look="info">
				<f:facet name="heading">
					<b>Skinning</b>
				</f:facet>
				<p>
				   The entire checkbox (including label and caption) is enclosed in a <code>div</code> bearing the CSS-class <code>checkbox</code>.</p>
			</b:panel>
                
                <script type="text/javascript">
                    SyntaxHighlighter.all();
                </script>
                <br/><br/><br/><br/>
            </ui:define>
        </ui:composition>
