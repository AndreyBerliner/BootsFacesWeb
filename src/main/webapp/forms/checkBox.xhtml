<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition template="/applayout/pageTemplate.xhtml" xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:b="http://bootsfaces.net/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets">

            <ui:define name="content">
                <style>td {padding: 8px;}</style>
                <h1>Checkbox (&lt;b:selectBooleanCheckbox&gt;)</h1>
                
                <p>Checkboxes are very simple input widgets: an empty square that can be checked or not. They permit the user to make a binary choice.</p>
                <p>&lt;b:selectBooleanCheckbox&gt; makes the Bootstrap style of displaying checkboxes available to JSF programmers.</p>
                <h1>Basic usage</h1>
				<b:tabView>
				    <b:tab title="JSF markup">
				       <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
<h:form>
    <b:selectBooleanCheckbox value="&#35;{settingsBean.checkbox1}" caption="checkbox 1"/>
</h:form>
]]>
       </script>
				    </b:tab>
				    <b:tab title="displayed as">
				        <h:form>
				            <b:selectBooleanCheckbox value="#{settingsBean.checkbox1}" caption="checkbox 1" />
				        </h:form>
				    </b:tab>
				</b:tabView>

				<p>Use the <code>caption</code> attribute to display the label checkbox. Don't confuse it with the <code>label</code> attribute. This puts the label above the checkbox, as you can see in the next example.</p>
				
				                <h1>Labels as captions above the checkbox</h1>
				<b:tabView>
				  <b:tab title="JSF markup">
				    <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
    <h:form>
    	<h:panelGrid columns="2"  cellpadding="5">
         	<b:selectBooleanCheckbox value="&#35;{settingsBean.checkbox2}" label="checkbox 2" />
        </h:panelGrid>
    </h:form>
]]>
    </script>
				  </b:tab>
				  <b:tab title="displayed as">
				    <h:form>
				    	<h:panelGrid columns="2"  cellpadding="5">
				         	<b:selectBooleanCheckbox value="#{settingsBean.checkbox2}" label="checkbox 2" />
				        </h:panelGrid>
				    </h:form>
				  </b:tab>
				</b:tabView>
                <p>The label is displayed above the checkbox</p>
                
                
                <h1>Disabling Checkboxes</h1>
                <ul>
                <li>Checkboxes can be disabled by setting the <code>disabled</code> attribute.</li>
                <li>As of BootsFaces 0.7.0, the attribute <code>readonly</code> is not supported yet. You can simulate it by adding <code>onclick="return false;"</code>.
                However, this doesn't prevent the user from toggling the checkbox via their keyboard. More precisely, it depends on your browser - some browsers
                suppress the keyboard if there's <code>onclick="return false;"</code>, but it's not guaranteed to work with every browser.
                </li>
                </ul>
                <p>The example below shows both options:</p> 
				<b:tabView activeIndex="1">
				  <b:tab title="JSF markup">
				    <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
    	        <h:panelGrid columns="2"  cellpadding="5">
				    <h:form>
				    	<h:panelGrid columns="2"  cellpadding="5">
				         	<b:selectBooleanCheckbox value="&#35;{checkboxBean.checkbox}" 
				         	              caption="checkbox" 
				         	              disabled="&#35;{!checkboxBean.editable}"/>
				         	<h:outputText value="Value submitted on last submit: &#35;{checkboxBean.checkbox}" />
				         	<b:selectBooleanCheckbox value="&#35;{checkboxBean.editable}"  
				         	              caption="editable" 
				         	              onclick="return false;" />
				        </h:panelGrid>
				        <b:commandButton  value="submit" 
				                          ajax="true" 
				                          update="@form" />
				        <b:commandButton  value="&#35;{checkboxBean.editable?'disable checkbox':'ensable checkbox'}" 
				                          ajax="true" 
				                          update="@form" 
				                          actionListener="&#35;{checkboxBean.toggleEditmode}"/>
				    </h:form>
               </h:panelGrid>
]]>
    </script>
				  </b:tab>
				  <b:tab title="displayed as">
				    <h:form>
				    	<h:panelGrid columns="1"  cellpadding="5">
				         	<b:selectBooleanCheckbox value="#{checkboxBean.checkbox}" 
				         	              caption="checkbox (initially disabled)" 
				         	              disabled="#{!checkboxBean.editable}"/>
				         	<h:outputText value="Value submitted on last submit: #{checkboxBean.checkbox}" />
				         	<b:selectBooleanCheckbox value="#{checkboxBean.editable}"  
				         	              caption="is the checkbox above editable? (This checkbox is read only)" 
				         	              onclick="return false;" />
				        </h:panelGrid>
				        <b:commandButton  value="submit" 
				                          ajax="true" 
				                          update="@form" />
				        <b:commandButton  value="#{checkboxBean.editable?'disable checkbox':'enable checkbox'}" 
				                          ajax="true" 
				                          update="@form" 
				                          actionListener="#{checkboxBean.toggleEditmode}"/>
				    </h:form>
				  </b:tab>
				</b:tabView>
				<br />
        
                <h2>Tooltips</h2>
               <p>The example below shows both options:</p> 
        <b:tabView activeIndex="1">
          <b:tab title="JSF markup">
            <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
           <h:form>
              <h:panelGrid columns="2"  cellpadding="5">
                  <b:selectBooleanCheckbox value="#num;{checkboxBean.editable}"  
                                label="disabled checkbox with tooltip"
                                tooltip="This is a tooltip."/>
                  <b:selectBooleanCheckbox value="#num;{checkboxBean.checkbox}" 
                                disabled="true"
                                label="disabled checkbox with tooltip"
                                tooltip="Even a disabled checkbox can have a tooltip."/>
                </h:panelGrid>
           </h:form>
 ]]>
    </script>
          </b:tab>
          <b:tab title="displayed as">
            <h:form>
              <h:panelGrid columns="2"  cellpadding="5">
                  <b:selectBooleanCheckbox value="#{checkboxBean.editable}"  
                                label="disabled checkbox with tooltip"
                                tooltip="This is a tooltip."/>
                  <b:selectBooleanCheckbox value="#{checkboxBean.checkbox}" 
                                disabled="true"
                                label="disabled checkbox with tooltip"
                                tooltip="Even a disabled checkbox can have a tooltip."/>
                </h:panelGrid>
            </h:form>
          </b:tab>
        </b:tabView>

                <h2>RTL-support</h2>
                <p>Bootstrap 3 doesn't support languages writing from right to left properly. Hence BootsFaces 
                offers limited support of RTL, too. However, you can add RTL by adding this library:</p>
                <p><a target="#" href="https://github.com/morteza/bootstrap-rtl">https://github.com/morteza/bootstrap-rtl</a></p>
               <p>The example shows the out-of-the-box support of BootsFaces:</p> 
        <b:tabView activeIndex="1">
          <b:tab title="JSF markup">
            <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
           <h:form>
              <h:panelGrid columns="2"  cellpadding="5">
                 <b:selectBooleanCheckbox value="#num;{checkboxBean.editable}"  
                                label="This is how RTL works!"
								caption="RTL is active."
								dir="rtl"
                                tooltip="Note the position of the exclamation mark. That's due to activating RTL."/>
                   <b:selectBooleanCheckbox value="#num;{checkboxBean.checkbox}" 
                                disabled="true"
                                label="This is how LTR works!"
                                caption="LTR is active."
                                tooltip="LTR is the default value."/>
                </h:panelGrid>
           </h:form>
 ]]>
    </script>
          </b:tab>
          <b:tab title="displayed as">
            <h:form>
              <h:panelGrid columns="2"  cellpadding="5">
                 <b:selectBooleanCheckbox value="#{checkboxBean.editable}"  
                                label="This is how RTL works!"
								caption="RTL is active."
								dir="rtl"
                                tooltip="Note the position of the exclamation mark. That's due to activating RTL."/>
                   <b:selectBooleanCheckbox value="#{checkboxBean.checkbox}" 
                                disabled="true"
                                label="This is how LTR works!"
                                caption="LTR is active."
                                tooltip="LTR is the default value."/>
                </h:panelGrid>
            </h:form>
          </b:tab>
        </b:tabView>
        
          <h2>AJAX and JavaScript  <b:badge value="since 0.8.0" /></h2>
          <p>The <code>&lt;b:selectBooleanCheckbox &gt;</code> supports the full suite of JavaScript and AJAX events,
          as described in <a href="ajax.jsf">the description of AJAX in BootsFaces</a>. Basically, each of the
          many JavaScript callback handlers (the <code>on[event]</code> attributes) also supports AJAX.
          To get familiar with BootsFaces AJAX, try the 
          <a target="#" href="https://github.com/stephanrauh/BootsFaces-Examples/tree/master/AJAX">BootsFaces AJAX demo project</a>.</p>
          
          <h2>Error messages <b:badge value="since 0.8.1" /></h2>
         <p>If the field has a FacesMessage, one of the CSS classes <code>bf-info</code>, <code>bf-warning</code>, 
             <code>bf-error</code> or <code>bf-fatal</code> is added to the label, depending on which error severity the message has.
             The latter two classes color the label red. <code>bf-warning</code> colors it orange. You can override this default setting in a custom CSS file.</p>
          <p>If there's no message,
             the field and its label bear the pseudo CSS class <code>bf-no-message</code>.
          </p>
          <b:tabView activeIndex="1" contentStyle="border-right: 1px solid #ddd;border-left: 1px solid #ddd;border-bottom: 1px solid #ddd;padding:10px">
          <b:tab title="JSF markup">
            <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
                 <h:form id="messageForm">
                  <b:panelGrid colSpans="3,9">
                    <b:selectBooleanCheckbox value="#num;{checkboxBean.cbxError}" 
                                    id="checkboxWithErrorMessage"
                                    caption="click to toggle the error message" 
                                    label="error"
                                    onclick="ajax:checkboxBean.action();"
                                    update="@form"
                                    />
                    <b:message />
                    <b:selectBooleanCheckbox value="#num;{checkboxBean.cbxFatal}" 
                                    id="checkboxWithFatalMessage"
                                    caption="click to toggle the fatal error message" 
                                    label="fatal"
                                    onclick="ajax:checkboxBean.action();"
                                    update="@form"
                                    />
                    <b:message for="checkboxWithFatalMessage" />
                    <b:selectBooleanCheckbox value="#num;{checkboxBean.cbxWarning}" 
                                    id="checkboxWithWarning"
                                    caption="click to toggle the warning" 
                                    label="warning"
                                    onclick="ajax:checkboxBean.action();"
                                    update="@form"
                                    />
                    <b:message for="@previous:@previous:@next" />
                    <b:selectBooleanCheckbox value="#num;{checkboxBean.cbxInfo}" 
                                    id="checkboxWithInfoMessage"
                                    caption="click to toggle the info message" 
                                    label="info"
                                    onclick="ajax:checkboxBean.action();"
                                    update="@form"
                                    />
                                    
                    <b:message for="@form:**:checkboxWithInfoMessage" />
                  </b:panelGrid>
                </h:form>
 ]]>
   			 </script>
          </b:tab>
          <b:tab title="displayed as">
                 <h:form id="messageForm">
                  <b:panelGrid colSpans="3,9">
                    <b:selectBooleanCheckbox value="#{checkboxBean.cbxError}" 
                                    id="checkboxWithErrorMessage"
                                    caption="click to toggle the error message" 
                                    label="error"
                                    onclick="ajax:checkboxBean.action();"
                                    update="@form"
                                    />
                    <b:message />
                    <b:selectBooleanCheckbox value="#{checkboxBean.cbxFatal}" 
                                    id="checkboxWithFatalMessage"
                                    caption="click to toggle the fatal error message" 
                                    label="fatal"
                                    onclick="ajax:checkboxBean.action();"
                                    update="@form"
                                    />
                    <b:message for="checkboxWithFatalMessage" />
                    <b:selectBooleanCheckbox value="#{checkboxBean.cbxWarning}" 
                                    id="checkboxWithWarning"
                                    caption="click to toggle the warning" 
                                    label="warning"
                                    onclick="ajax:checkboxBean.action();"
                                    update="@form"
                                    />
                    <b:message for="@previous:@previous:@next" />
                    <b:selectBooleanCheckbox value="#{checkboxBean.cbxInfo}" 
                                    id="checkboxWithInfoMessage"
                                    caption="click to toggle the info message" 
                                    label="info"
                                    onclick="ajax:checkboxBean.action();"
                                    update="@form"
                                    />
                                    
                    <b:message for="@form:**:checkboxWithInfoMessage" />
                  </b:panelGrid>
                </h:form>          
             </b:tab>
        </b:tabView>
        
          <h2>The <code>required</code> attribute  <b:badge value="since 0.8.2" /></h2>
          <p>The <code>required</code> attribute works a bit different than the <code>required</code> attribute
          of other input field. You can't leave a checkbox empty. Even if you don't check it, this may be
          a deliberate decision. As a consequence, most JSF frameworks ignore the <code>required</code>
          attribute. However, since version 0.8.2 setting the <code>required</code> attribute amount to
          forcing the user to check it. A typical usecase is accepting the EULA of your application.</p>
              
               
          <b:tabView activeIndex="1" contentStyle="border-right: 1px solid #ddd;border-left: 1px solid #ddd;border-bottom: 1px solid #ddd;padding:10px">
          <b:tab title="JSF markup">
            <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
            <h:form>
              <b:selectBooleanCheckbox value="#{checkboxBean.cbxFatal}" 
                 label="This BootsFaces checkbox has to be checked."
                 caption="I've read and understood the EULA."
                 render-label="true"
                 required="true" 
                 required-message="Please check the checkbox."
                 onclick="ajax:checkboxBean.action();"
                 update="@form" />
                 <b:message for="@previous" />
              <b:commandButton value="submit and validate"
                 onclick="ajax:checkboxBean.action();"
                 update="@form" />
              <b:messages global-only="true" />
            </h:form>
  ]]>
         </script>
          </b:tab>
          <b:tab title="displayed as">
             <h:form>
              <b:selectBooleanCheckbox value="#{checkboxBean.cbxFatal}" 
                 label="This BootsFaces checkbox has to be checked."
                 caption="I've read and understood the EULA."
                 render-label="true"
                 required="true" 
                 required-message="Please check the checkbox."
                 onclick="ajax:checkboxBean.action();"
                 update="@form" />
                 <b:message for="@previous" />
              <b:commandButton value="submit and validate"
                 onclick="ajax:checkboxBean.action();"
                 update="@form" />
              <b:messages global-only="true" />
            </h:form>
          </b:tab>
        </b:tabView>
        
        
        
        

                
        
				<h1>Reference section</h1>
                <ui:include src="SelectBooleanCheckboxAttributes.xhtml" />
                
                <b:panel look="info">
    				<f:facet name="heading">
    					<b>Skinning</b>
    				</f:facet>
    				<p>
    				   The entire checkbox (including label and caption) is enclosed in a <code>div</code> bearing the CSS-class <code>checkbox</code>.</p>
  			    </b:panel>
                  
                <script type="text/javascript">
                    SyntaxHighlighter.all();
                </script>
                <br/><br/><br/><br/>
            </ui:define>
        </ui:composition>
