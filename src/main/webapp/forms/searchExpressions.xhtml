<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition template="/applayout/pageTemplate.xhtml"   
    xmlns="http://www.w3.org/1999/xhtml" 
    xmlns:h="http://java.sun.com/jsf/html" 
    xmlns:f="http://java.sun.com/jsf/core"
    xmlns:b="http://bootsfaces.net/ui" 
    xmlns:ui="http://java.sun.com/jsf/facelets"
    xmlns:p="http://primefaces.org/ui">

        <ui:define name="content">
            <h1>Search Expressions</h1>
                <p>Inspired by PrimeFaces, BootsFaces implements a couple of powerful search expressions to make your life easier.
                In almost every case, you can get rid of ids. Use <code>@form</code>,
                <code>@next</code>,<code>@previous</code>,<code>@parent</code> and <code>@styleClass(cssClass) instead.</code></p>
                
                <h2>State of the art</h2>
                <p>Currently, the search expressions can only used with the <code>update</code> attribute of <code>&lt;b:commandButton.&gt;</code></p>.
                <h2>Basic usage</h2>
                <p>Like in standard JSF, you can use ids to determine which region of the DOM to update:</p>
                <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1"><![CDATA[
                   <h:body>
                     <b:tabView id="tabViewId">
                       <b:tab>
                         <h:form>
                            <b:panel id="panelId">	
                              <b:commandButton update=":tabViewId" />
                              <b:commandButton update="panelId" />
                            </b:panel>
                          </h:form>    
                       </b:tab>
                     </b:tabView>
                   </h:body>
                ]]></script>
				<p>The preceding colon indicates that <code>:tabViewId</code> isn't inside the "naming container" - usually a form or a custom composite component -
				but in the root of the JSF component tree. The <code>panelId</code> is direct descendant of the form, so it doesn't need a colon.</p>
				
				<h2>Standard JSF search expressions</h2>
				<p>Standard JSF introduces several search expressions, basically shortcut allowing you to get rid of the ids in many cases:</p>
				<ul>
				<li>@form is the form surrounding the button.</li>
				<li>@this the the command button itself.</li>
				<li>@all is the entire JSF page. Note that BootsFaces doesn't support @all yet. In any case, use @all only in there's no other way: it's very
				inefficient, because it forces every JavaScript library to reinitialize.</li>
				<li>@none is an exotic special case. It doesn't update anything. You sometimes need it to trigger an action on the server,
				but don't want to display anything new on the client.</li>
				</ul>
				
				<h2>PrimeFaces search expressions supported by BootsFaces</h2>
				<p>Standard JSF introduces several search expressions, basically shortcut allowing you to get rid of the ids in many cases:</p>
				<ul>
				<li>@previous </li>
				<li>@next </li>
				<li>@parent </li>
				
				<h2>BootsFaces search expressions</h2>
				<p>Standard JSF introduces several search expressions, basically shortcut allowing you to get rid of the ids in many cases:</p>				
				<li>@findIdRecursive(id) find an id anywhere in the JSF tree below the currently select node. For instance, <code>@form:**:someId</code> looks for <code>someId</code>, 
				considering the entire form.</li>
				<li>** shortcut for @findIdRecursive</li>
				<li>@findId(id)  find an id, but restrict the search to the top-most level of the tree</li>
				<li>*:id shortcut for @findId </li>
				<li>@findPartialId(id)  find one or many ids, given by a wildcard expression: <code>*suffix</code>, <code>prefix*</code> or <code>prefix*suffix</code>.
				Only the topmost level is considered.</li>
				<li>*id shortcut for @findPartialId </li>
				<li>@findPartialIdRecursive(id)  find one or many ids, given by a wildcard expression: <code>*suffix</code>, <code>prefix*</code> or <code>prefix*suffix</code>.
				Searches the entire tree.</li>
				<li>**:*id or **:id* or **:*id* shortcut for @findPartialIdRecursive </li>
				<li>@styleClass(className) looks for a JSF component with a certain styleClass attribute (yet to be implemented)</li>
				<li>child(n) yields a certain child of the currently selected JSF subtree.</li>
				</ul>
				
				<h2>PrimeFaces search expressions BootsFaces does not support</h2>
				<p>There are a few PrimeFaces search expressions BootsFaces does not support:</p>
				<ul>
				<li>@() jquery expressions.</li>
				<li>@namingcontainer</li>
				<li>@composite</li>
				<li>@row(n)</li>
				<li>@widgetVar(name)</li>
				</ul>
				


                <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1"><![CDATA[
                   emtpy
                ]]></script>

				<ui:include src="searchExpressionsAllInOneDemo.xhtml"></ui:include> 
 
            <br />
            
            <script type="text/javascript">
                SyntaxHighlighter.all();
            </script>
            <br />
            <br />
            <br />
            <br />
        </ui:define>
    </ui:composition>
