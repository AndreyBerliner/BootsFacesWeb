<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition template="/applayout/pageTemplate.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:b="http://bootsfaces.net/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets">

	<ui:define name="content">
		<style>
		td {
			padding: 8px;
		}
		</style>

		<h1>
			DataTable (&lt;b:dataTable /&gt;)
			<b:badge value="experimental / since 0.8.0" />
		</h1>
		<p>
			Currently, the
			<code>&lt;b:dataTable &gt;</code>
			isn't much more than a proof of concept. We plan to implement a
			full-blown datatable in the next version of BootsFaces (probably
			0.9.0).
		</p>

		<h3>Basic usage</h3>

		<b:tabView activeIndex="1">
			<b:tab title="JSF markup">
				<b:well>
					<script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
						<![CDATA[
    <b:dataTable value="&num;{carPool.carPool}" var="car" id="bcarPool" styleClass="table table-striped table-bordered"
     style="width:100%">
      <h:column>
        <f:facet name="header">
          <h:outputText value="Brand" />
        </f:facet>
        <h:outputText value="&num;{car.brand}" />
      </h:column>
      <h:column>
        <f:facet name="header">
          <h:outputText value="Type" />
        </f:facet>
        <h:inputText value="&num;{car.type}" />
      </h:column>

    </b:dataTable>
				]]></script>
				</b:well>
			</b:tab>
			<b:tab title="displayed as" contentStyle="border:1px solid ;padding:10px">
				<b:dataTable value="#{carPool.carPool}" var="car" id="bcarPool"
					styleClass="table table-striped table-bordered" style="width:100%">
					<h:column>
						<f:facet name="header">
							<h:outputText value="Brand" />
						</f:facet>
						<h:outputText value="#{car.brand}" />
					</h:column>
					<h:column>
						<f:facet name="header">
							<h:outputText value="Type" />
						</f:facet>
						<h:inputText value="#{car.type}" />
					</h:column>
				</b:dataTable>
			</b:tab>
		</b:tabView>

		<h3>A More advanced usage example</h3>
		<p>
			This example shows how to enable some additional dataTable features
			like responsive design or fixed header. Furthermore in this example,
			you can also see the i18n support of
			<code>&lt;b:dataTable &gt;</code>. For i18n there were two ways: use internal translation (you can
			choose between a limited set of embedded translations) or you can
			provide your own translation with a remote URL (eg. CDN url)
		</p>

		<b:tabView activeIndex="1">
			<b:tab title="JSF markup">
				<b:well>
					<script type="syntaxhighlighter"
						class="brush: xml; toolbar: false;gutter: false; first-line: 1">
						<![CDATA[
    <b:dataTable value="&num;{carPool.carPool}" var="car" id="bcarPool2" styleClass="table table-striped table-bordered"
     style="width:100%" fixedHeader="true" responsive="true" lang="it">
      <h:column>
        <f:facet name="header">
          <h:outputText value="Brand" />
        </f:facet>
        <h:outputText value="&num;{car.brand}" />
      </h:column>
      <h:column>
        <f:facet name="header">
          <h:outputText value="Type" />
        </f:facet>
        <h:inputText value="&num;{car.type}"/>
      </h:column>
 	  <h:column>
        <f:facet name="header">
           <h:outputText value="Color" />
        </f:facet>
        <h:outputText value="&num;{car.color}"/>
      </h:column>
      <h:column>
         <f:facet name="header">
            <h:outputText value="Year" />
         </f:facet>
         <h:outputText value="&num;{car.year}"/>
      </h:column>
    </b:dataTable>
]]>
</script>
				</b:well>
			</b:tab>
			<b:tab title="displayed as" contentStyle="border:1px solid ;padding:10px">
				<b:dataTable value="#{carPool.carPool}" var="car" id="bcarPool2"
					styleClass="table table-striped table-bordered" style="width:100%"
					fixedHeader="true" responsive="true" lang="it">
					<h:column>
						<f:facet name="header">
							<h:outputText value="Brand" />
						</f:facet>
						<h:outputText value="#{car.brand}" />
					</h:column>
					<h:column>
						<f:facet name="header">
							<h:outputText value="Type" />
						</f:facet>
						<h:inputText value="#{car.type}" />
					</h:column>
					<h:column>
						<f:facet name="header">
							<h:outputText value="Color" />
						</f:facet>
						<h:outputText value="#{car.color}" />
					</h:column>
					<h:column>
						<f:facet name="header">
							<h:outputText value="Year" />
						</f:facet>
						<h:outputText value="#{car.year}" />
					</h:column>
				</b:dataTable>
			</b:tab>
		</b:tabView>

		<h3>Do it yourself</h3>
		<p>
			This example shows how to convert the standard JSF datatable without
			support by BootsFaces. Until we've finished the implementation of
			<code>&lt;b:dataTable &gt;</code>, this is the most flexible approach.</p>

		<h:dataTable value="{{carPool.carPool}}" var="car" id="carPool"
			styleClass="table table-striped table-bordered" style="width:100%">
			<h:column>
				<f:facet name="header">
					<h:outputText value="Brand" />
				</f:facet>
				<h:outputText value="#{car.brand}" />
			</h:column>
			<h:column>
				<f:facet name="header">
					<h:outputText value="Type" />
				</f:facet>
				<h:inputText value="#{car.type}" />
			</h:column>

		</h:dataTable>
		<script>
			$(document).ready(function() {
				$('#carPool').DataTable();
			});
		</script>

		<h3>Empty data table:</h3>
		<h:dataTable value="{{carPool.emptyCarPool}}" var="car"
			id="emptyCarpool" styleClass="table table-striped table-bordered"
			style="width:100%">

			<h:column>
				<f:facet name="header">
					<h:outputText value="Brand" />
				</f:facet>
				<h:outputText value="#{car.brand}" />
			</h:column>
			<h:column>
				<f:facet name="header">
					<h:outputText value="Type" />
				</f:facet>
				<h:outputText value="#{car.type}" />
			</h:column>

		</h:dataTable>
		<script>
			$(document).ready(function() {
				$('#emptyCarpool').DataTable();
			});
		</script>


		<h3>Advanced usage</h3>
		<ui:include src="dataTable.html" />

		<h3>Reference section</h3>
		<ui:include src="DataTableAttributes.xhtml" />
		<b:panel look="info" rendered="false">
			<f:facet name="heading">
				<b>Skinning</b>
			</f:facet>
			<ul>
				<li>Tell the world which CSS classes can be used to change the
					look of the component.</li>
			</ul>
		</b:panel>

		<script type="text/javascript">
			SyntaxHighlighter.all();
		</script>
		<br />
		<br />
		<br />
		<br />
	</ui:define>
</ui:composition>
