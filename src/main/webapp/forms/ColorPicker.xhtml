<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition template="/applayout/pageTemplate.xhtml"
	xmlns="http://www.w3.org/1999/xhtml"
	xmlns:h="http://java.sun.com/jsf/html"
	xmlns:f="http://java.sun.com/jsf/core"
	xmlns:b="http://bootsfaces.net/ui"
	xmlns:ui="http://java.sun.com/jsf/facelets">

	<ui:define name="custom-header">
		<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
	</ui:define>
	<ui:define name="content">
		<style>
		td {
			padding: 8px;
		}
		</style>
    <h:form>
		<h1>ColorPicker (&lt;b:colorPicker /&gt;) <b:badge value="since 0.8.5" /></h1>

		<p><code>&lt;b:colorPicker&gt;</code> is a simple inputText that display color swatches.
		The component provides a set of configuration to display the swatch in different positions and with different
		color configurations (RGB, HSL, with or without alpha.)</p>
		<br/>
		<h1>Basic usage</h1>
		<br/>
		<h4>Basic RGB Color picker aligned left with opacity active</h4>
		<b:tabView activeIndex="1">
			<b:tab title="JSF markup">
				<b:well>
					<script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
						<![CDATA[
    						<b:colorPicker value="&num;{test.selectedColor}" opacity="true" format="rgb"
                                           label="Choose an RBB color" render-label="true" />
					]]></script>
				</b:well>
			</b:tab>
			<b:tab title="displayed as" contentStyle="padding:10px">
				<b:colorPicker value="#{test.selectedColor}" opacity="true" format="rgb"
                               label="Choose an RGB color" render-label="true"
                               />
			</b:tab>
		</b:tabView>
		<br/>

		<h4>Basic HEX Color wheel aligned right without opacity and popup position in bottom-right corner</h4>
		<b:tabView activeIndex="1">
			<b:tab title="JSF markup">
				<b:well>
					<script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
						<![CDATA[
							<b:colorPicker value="&num;{test.selectedColor}" opacity="false" format="hex" control="wheel" position="bottom right"/>
					]]></script>
				</b:well>
			</b:tab>
			<b:tab title="displayed as" contentStyle="padding:10px">
				<b:colorPicker value="#{test.selectedColor}" opacity="false" format="hex" control="wheel" position="bottom right"/>
			</b:tab>
		</b:tabView>

		<h4>Basic RGB Color Picker with predefined color swatches</h4>
		<b:tabView activeIndex="1">
			<b:tab title="JSF markup">
				<b:well>
					<script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
						<![CDATA[
							<b:colorPicker value="#{test.selectedColor}" opacity="true" format="rgb" swatches="#fff|#000|#f00|#0f0|#00f|#ff0|rgba(0,0,255,0.5)"/>
					]]></script>
				</b:well>
			</b:tab>
			<b:tab title="displayed as" contentStyle="padding:10px">
				<b:colorPicker value="#{test.selectedColor}" opacity="true" format="rgb" swatches="#fff|#000|#f00|#0f0|#00f|#ff0|rgba(0,0,255,0.5)"/>
			</b:tab>
		</b:tabView>

        <h1>Mobile devices</h1>
        <p>On a mobile device, you should prevent the user from zooming into the page because this interferes with the colorpicker.
        Simply add these lines to the <code>&lt;h:head /&gt;</code> of your JSF page:</p>
        <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
            <![CDATA[
              <meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=no" />
          ]]></script>

        <br/>
        
    <h2>Labels, required fields and error messages</h2>
    <p>You can add a label by adding the attribute <code>label</code>. The label is also used by the JSF messages. To give you maximum flexibility,
    you can suppress automatic rendering of labels by adding <code>renderLabel="false"</code>.
    </p>
    <p>Required inputs fields and their labels both bear the CSS class <code>bf-required</code>. By default, this adds an asterisk to the label.</p>
    <p>If the field has a FacesMessage, one of the CSS classes <code>bf-info</code>, <code>bf-warning</code>,
        <code>bf-error</code> or <code>bf-fatal</code>, depending on which error severity the message has.
        The latter two classes color the label red.</p>
     <p>If there's no message,
        the field and its label bear the pseudo CSS class <code>bf-no-message</code>  and <code>has-success</code>. The latter colors the label green by default.
    </p>
    <b:tabView>
      <b:tab title="live preview">
        <b:well>
          	<b:row id="requiredField">
                <b:colorPicker mode="toggle-icon" showWeek="true" firstDay="1" value="#{test.selectedColor}"
                  required="true" label="required color" render-label="true" />
                <b:message for="@previous" col-sm="5"/>
            </b:row>
            <b:row>
              <b:commandButton value="submit" update="requiredField" col-sm="2" look="success" />
            </b:row>
        </b:well>
      </b:tab>
      <b:tab title="JSF markup">
        <b:well>
          <script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
             <![CDATA[
         	<b:row id="requiredField">
                <b:colorPicker mode="toggle-icon" showWeek="true" firstDay="1" value="&num;{test.selectedColor}"
                  required="true" label="required color" render-label="true" />
                <b:message for="@previous" col-sm="5"/>
            </b:row>
            <b:row>
              <b:commandButton value="submit" update="requiredField" col-sm="2" look="success" />
            </b:row>
             ]]></script>
        </b:well>
      </b:tab>
    </b:tabView>
        
        
        
        <h2>Responsive design <b:badge value="since 0.9.0" /></h2>
        <p>You can use all the attributes controlling the responsive behaviour of <code>&lt;b:column /&gt;</code>
        also with <code>&lt;b:colorPicker /&gt;</code>:</p>
       <b:tabView>
          <b:tab title="live preview">
          <b:well>
             <b:row>
                <b:colorPicker tooltip="large-screen='full-width'" large-screen="full-width" />
             </b:row>
             <b:row style="padding-top:5px">
                <b:colorPicker tooltip="large-screen='one-third'" large-screen="one-third" />
                <b:colorPicker tooltip="large-screen='two-thirds'" large-screen="two-thirds" />
             </b:row>
             <b:row style="padding-top:5px">
                <b:colorPicker tooltip="small-screen='one-third'" small-screen="one-third" />
                <b:colorPicker tooltip="small-screen='two-thirds'" small-screen="two-thirds" />
             </b:row>
             <b:row style="padding-top:5px">
                <b:colorPicker tooltip="tiny-screen='one-fourth'" tiny-screen="one-fourth" />
                <b:colorPicker tooltip="tiny-screen='half' offset-sm='3'" tiny-screen="half" offset-sm="3" />
             </b:row>
          </b:well>
          </b:tab>
          <b:tab title="JSF markup">
          <b:well>
          <script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
             <![CDATA[
             <b:row>
                <b:colorPicker tooltip="large-screen='full-width'" large-screen="full-width" />
             </b:row>
             <b:row style="padding-top:5px">
                <b:colorPicker tooltip="large-screen='one-third'" large-screen="one-third" />
                <b:colorPicker tooltip="large-screen='two-thirds'" large-screen="two-thirds" />
             </b:row>
             <b:row style="padding-top:5px">
                <b:colorPicker tooltip="small-screen='one-third'" small-screen="one-third" />
                <b:colorPicker tooltip="small-screen='two-thirds'" small-screen="two-thirds" />
             </b:row>
             <b:row style="padding-top:5px">
                <b:colorPicker tooltip="tiny-screen='one-fourth'" tiny-screen="one-fourth" />
                <b:colorPicker tooltip="tiny-screen='half' offset-sm='3'" tiny-screen="half" offset-sm="3" />
             </b:row>
             ]]></script>
          </b:well>
          </b:tab>
        </b:tabView>

        <h2>Visibility depending on screen size <b:badge value="since 0.8.6/0.9.0" /></h2>
        <p>You can play also with col-*-*, visible and hidden attribute, as any bootstrap elements. For example:</p>
        <br/>
        <b:tabView>
          <b:tab title="live preview">
          <b:well>
               <b:panelGrid colSpans="3,9">
                  <h:outputText value="Visible on &gt;= md:" />
                  <b:colorPicker value="Visible on medium or large screen" severity="info" visible="md..." />
                  <h:outputText value="Visible on &lt;= sm:" />
                  <b:colorPicker value="Visible on small-screen" severity="success" visible="...sm"/>
                  <h:outputText value="Visible on sm...lg:" />
                  <b:colorPicker value="Visible on small to large screen" severity="success" visible="sm...lg"/>
                  <h:outputText value="Visible on xs and md:" />
                  <b:colorPicker value="Visible on tiny and medium screen" severity="success" visible="xs,md"/>
                  <h:outputText value="Col-md-6, offset 2:" />
                  <b:colorPicker value="col-md-6, offset 2" severity="success" col-md="6" offset="2" />
               </b:panelGrid>
         </b:well>
          </b:tab>
          <b:tab title="JSF markup">
          <b:well>
          <script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
             <![CDATA[
               <b:panelGrid colSpans="3,9">
                  <h:outputText value="Visible on &gt;= md:" />
                  <b:colorPicker value="Visible on medium or large screen" severity="info" visible="md..." />
                  <h:outputText value="Visible on &lt;= sm:" />
                  <b:colorPicker value="Visible on small-screen" severity="success" visible="...sm"/>
                  <h:outputText value="Visible on sm...lg:" />
                  <b:colorPicker value="Visible on small to large screen" severity="success" visible="sm...lg"/>
                  <h:outputText value="Visible on xs and md:" />
                  <b:colorPicker value="Visible on tiny and medium screen" severity="success" visible="xs,md"/>
                  <h:outputText value="Col-md-6, offset 2:" />
                  <b:colorPicker value="col-md-6, offset 2" severity="success" col-md="6" offset="2" />
               </b:panelGrid>
             ]]></script>
          </b:well>
          </b:tab>
        </b:tabView>

        <h2>Tooltips</h2>
        <p><code>&lt;b:colorPicker /&gt;</code> supports tooltips:</p>
        <br/>
        <b:tabView>
          <b:tab title="live preview">
          <b:well>
              <b:colorPicker value="Look at my tooltip!" severity="info" tooltip="Ain't it a nice tooltip?"/>
          </b:well>
          </b:tab>
          <b:tab title="JSF markup">
          <b:well>
          <script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 0">
                  <![CDATA[
                      <b:colorPicker value="Look at my tooltip!" tooltip="Ain't it a nice tooltip?"/>
                 ]]></script>
          </b:well>
          </b:tab>
        </b:tabView>


		<h3>Reference section</h3>
		<ui:include src="ColorPickerAttributes.xhtml" />
		<b:panel look="info" rendered="false">
			<f:facet name="heading">
				<b>Skinning</b>
			</f:facet>
			<ul>
				<li>Tell the world which CSS classes can be used to change the
					look of the component.</li>
			</ul>
		</b:panel>
    </h:form>

		<script type="text/javascript">
      		SyntaxHighlighter.all();
      		/*
      		document.body.addEventListener('touchmove', function(event) {
      		  event.preventDefault();
      		}, false);
      		*/
    	</script>
		<br />
		<br />
		<br />
		<br />
	</ui:define>
</ui:composition>
