<?xml version='1.0' encoding='UTF-8' ?>
<!DOCTYPE html>
<ui:composition template="/applayout/pageTemplate.xhtml" xmlns="http://www.w3.org/1999/xhtml"
      xmlns:h="http://java.sun.com/jsf/html"
      xmlns:f="http://java.sun.com/jsf/core"
      xmlns:b="http://bootsfaces.net/ui"
      xmlns:ui="http://java.sun.com/jsf/facelets">
 
             <ui:define name="content">
                <style>
                    .panel-body .divider {
                        background-color: #E5E5E5;
                        height: 1px;
                        margin: 9px 0;
                        overflow: hidden;
                    }
                    .panel-body .dropdown-header { padding: 3px 15px; }
                </style>
                
                <h1>NavLinks and NavCommandLinks</h1>
                <p>The NavLink is a very versatile component you can use for different purposes.</p>
                <p>The <code>b:navLink</code> tag is a more powerful version of the standard JSF <code>h:link</code> tag.</p>
                <p>This means that you can use the <code>outcome</code>, <code>fragment</code> and <code>href</code> attributes.</p>
                <p>NavLinks can be used in: </p>
                <ul>
                    <b:navLink outcome="navbars" fragment="dropmenus" value="Drop menus in NavBars"/>
                    <b:navLink outcome="/bootstrap/dropButton" value="Drop Buttons"/>
                    <li>List Links</li>
                </ul>
                <p>There are five kinds of <code>&lt;b:navLink: /&gt;</code>
                    <ul>
                        <li>a link that points to an outcome</li>
                        <li>an external link</li>
                        <li>a link calling a Javascript function</li>
                        <li>a header link</li>
                        <li>a separator link</li>
                    </ul>
                </p>
                <p><b:badge value="changed in 0.8.1" /> For some technical reason, in BootsFaces 0.8.0 the <code>&lt;b:navLink /&gt;</code> component couldn't call JSF action listeners. To circumvent this limitation, there's a second
                component, we added <code>&lt;b:navCommandLink /&gt;</code>. The advantage of <code>&lt;b:navCommandLink /&gt;</code> is that is can be use the <code>actionListener</code>
                and <code>action</code> attributes. The disadvantage is that is has to be put in a <code>&lt;h:form /&gt;</code>. Other than that, both components are identical.
                In particular, both components support the new unified AJAX API introduced with BootsFaces 0.8.0. You only see the differences when you try to use
                the standard JSF AJAX API.</p>
                <br/>
                
                <p>The outcome link, the external link and the Javascript link can have an icon adding the attribute <code>icon</code> (on the left or right, default is left).</p>
                <p>You can control the icon position by specifying it in the attribute <code>iconAlign</code>.</p>
                <p>The Icon attribute will add a Glyphicon icon (Bootstrap's default), but now you can also use a Font Awesome icon using the <code>iconAwesome</code> attribute instead of <code>icon</code>.</p>
                <p>Both <code>icon</code> and <code>iconAwesome</code> attributes, require the icon name as value the icon name without the trailing <b>glyphicon-</b> prefix and <b>fa-</b> prefix respectively.</p>
                <p><b:badge value="Hint" /> Bootstrap 4 is going to drop support for the Glyphicon library. We recommend you to chose icons from the Font Awesome library to avoid future incompatibilities.</p>
                <p>In the following example the <code>b:listLinks</code> tag is used as a container for the NavLinks, showing how to create a Sidebar with links.</p>
                <b:panel title="Example" look="default">
                    <h:form>
                    <b:row>
                        <b:column span="3">
                            <b:panel look="primary" title="Sidebar">
                                <b:listLinks>
                                    <b:navLink header="BootsFaces" />
                                    <b:navLink href="http://www.bootsfaces.net" value="BootsFaces"
                                               icon="globe" iconAlign="right"/>
                                    <b:navLink></b:navLink>
                                    <b:navLink header="Bootstrap"/>
                                    <b:navLink href="http://getbootstrap.com/components/#navbar" value="Bootstrap" icon="link"></b:navLink>
                                    <b:navLink></b:navLink>
                                    <b:navLink header="Preview"/>
                                    <b:navLink value="Labels and Badges" outcome="/bootstrap/labelsbadge"
                                               icon="tag" iconAlign="right"/>
                                    <b:navLink value="Slider" outcome="/jquery-ui/slider" iconAwesome="sliders"/>
                                    <b:navCommandLink value="AJAX actionListener" actionListener="#{messagesBean.info}"
                                               icon="tag" iconAlign="right" update="@form"/>
                                    <b:messages />
                                    
                                </b:listLinks>
                             </b:panel>
                        </b:column>
                    </b:row>
                        </h:form>
                    <f:facet name="footer">
                        <strong>Markup:</strong><br/>
                
                        <script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 1">
                        <![CDATA[
                        <b:panel look="primary" title="Sidebar">
                            <b:listLinks>
                                <b:navLink header="BootsFaces" />
                                <b:navLink href="http://www.bootsfaces.net" value="BootsFaces"
                                           icon="globe" iconAlign="right"/>
                                <b:navLink></b:navLink>
                                <b:navLink header="Bootstrap"/>
                                <b:navLink href="http://getbootstrap.com/components/#navbar" value="Bootstrap" icon="link"></b:navLink>
                                <b:navLink></b:navLink>
                                <b:navLink header="Preview"/>
                                <b:navLink value="Labels and Badges" outcome="/bootstrap/labelsbadge"
                                           icon="tag" iconAlign="right"/>
                                <b:navLink value="Slider" outcome="/jquery-ui/slider" iconAwesome="sliders" />
                            </b:listLinks>
                         </b:panel>
                        ]]></script>
                    </f:facet>
                </b:panel>
                <br />

				<h2>Opening a modal dialog in a NavLink</h2>
				<p>To open a modal dialog from a NavLink, don't use the attributes <code>data-target</code> and <code>data-toggle</code>. Use an <code>onclick</code> handler instead:</p>
				<b:well>
                        <script type="syntaxhighlighter" class="brush: xml; toolbar: false;first-line: 1">
                        <![CDATA[
							<b:navLink value="About" data-target="#aboutModal" data-toggle="modal"
           							   onclick="$('.aboutModalPseudoClass').modal('show');return false;"></b:navLink>                        
						]]></script>
				</b:well>
        
                <h2>Arbitrary content in a <code>&lt;b:navLink /&gt;</code><b:badge value="since 0.8.1" /></h2>
                <p><code>&lt;b:navLink /&gt;</code> isn't limited to text and icons. You can add arbitrary widgets
                as children of the <code>&lt;b:navLink /&gt;</code>:</p>
                <h:form>
                  <b:tabView activeIndex="1"
                    contentStyle="border-right: 1px solid #ddd;border-left: 1px solid #ddd;border-bottom: 1px solid #ddd;padding-right:25px;padding-left:25px;padding-top:10px"
                    contentClass="show-grid">
                    <b:tab title="JSF markup">
                      <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
                             <b:listLinks>
                                <b:navLink header="BootsFaces" />
                                <b:navLink href="http://www.bootsfaces.net">
                                   <b:badge style="margin-right:5px" value="b:navLink with nested content" />
                                </b:navLink>
                                <b:navLink href="http://www.bootsfaces.net" value="b:navLink with label">
                                   <b:badge style="margin-left:5px" value="and nested content" />
                                </b:navLink>
                                <b:navLink href="http://www.bootsfaces.net" value="BootsFaces"
                                           icon="globe" iconAlign="right">
                                           rocks (not only)
                                   <b:badge style="margin-right:5px" value="since 0.8.1" />
                                </b:navLink>
                                <b:navLink href="http://www.bootsfaces.net" value="in a b:navLink"
                                           icon="globe" iconAlign="left">
                                   <b:badge style="margin-left:10px" value="icon and nested content" />
                                </b:navLink>
                                <b:navLink href="http://www.bootsfaces.net" value="BootsFaces"
                                           iconAlign="right">
                                           Text and nested content
                                   <b:badge style="margin-right:5px" value="since 0.8.1" />
                                </b:navLink>
                                 
                            </b:listLinks>
 ]]>
         </script>
                    </b:tab>
                    <b:tab title="live preview" >
                        <b:panel look="primary" title="b:navLink with child elements">
                            <b:listLinks>
                                <b:navLink header="BootsFaces" />
                                <b:navLink href="http://www.bootsfaces.net">
                                   <b:badge style="margin-right:5px" value="b:navLink with nested content" />
                                </b:navLink>
                                <b:navLink href="http://www.bootsfaces.net" value="b:navLink with label">
                                   <b:badge style="margin-left:5px" value="and nested content" />
                                </b:navLink>
                                <b:navLink href="http://www.bootsfaces.net" value="BootsFaces"
                                           icon="globe" iconAlign="right">
                                           rocks (not only)
                                   <b:badge style="margin-right:5px" value="since 0.8.1" />
                                </b:navLink>
                                <b:navLink href="http://www.bootsfaces.net" value="in a b:navLink"
                                           icon="globe" iconAlign="left">
                                   <b:badge style="margin-left:10px" value="icon and nested content" />
                                </b:navLink>
                                <b:navLink href="http://www.bootsfaces.net" value="BootsFaces"
                                           iconAlign="right">
                                           Text and nested content
                                   <b:badge style="margin-right:5px" value="since 0.8.1" />
                                </b:navLink>
                                 
                            </b:listLinks>
                         </b:panel>
                    </b:tab>
                  </b:tabView>
                </h:form>
                <p>As you can see, the nested content is always rendered between the text and the label. However,
                in most cases you may want to consider moving the text and the icon (if there are any) into the nested
                content. This way, the JSF source code looks a bit cleaner.</p>
                
                <h2>AJAX <b:badge value="since 0.8.1" /></h2>
                <p>Both <code>&lt;b:navCommandLink /&gt;</code> and <code>&lt;b:navLink /&gt;</code> support the new 
                unified AJAX API introduced with BootsFaces 0.8.1. <code>&lt;b:navCommandLink /&gt;</code> also supports
                the traditional and the PrimeFaces AJAX API (to a certain extent).</p>
                <h3>Using b:navLink with AJAX</h3>
      <b:tabView activeIndex="2"
        contentStyle="border-right: 1px solid #ddd;border-left: 1px solid #ddd;border-bottom: 1px solid #ddd;padding-right:25px;padding-left:25px;padding-top:10px"
        contentClass="show-grid">
        <b:tab title="JSF markup">
          <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
          <b:panelGrid colSpans="6,6">
            <b:panel look="primary" title="Navigation menu">
              <b:listLinks>
                <b:navLink onclick="ajax:navLinkBean.navigateToPage(0, 'b:navLink')" value="Page 1  (NavLink)" update="**:targetPage"/>
                <b:navLink onclick="ajax:navLinkBean.navigateToPage(1, 'b:navLink')" value=" Page 2 (NavLink)" update="**:targetPage"/>
              </b:listLinks>
            </b:panel>
            <b:panel title="#{navLinkBean.getPageTitle()}" id="targetPage" look="#{navLinkBean.getPageLook()}">
              #{navLinkBean.getPageContent()}
            </b:panel>
          </b:panelGrid>
 ]]>
         </script>
        </b:tab>
        <b:tab title="Java Bean">
          <script type="syntaxhighlighter" class="brush: java toolbar: false;gutter: false; first-line: 1">
<![CDATA[
@ViewScoped
@ManagedBean
public class NavLinkBean implements Serializable {
	private static final long serialVersionUID = 1L;

	private int activePage = 0;

	private String source;

	public void navigateToPage(int page, String source) {
		activePage = page;
		this.source = source;
	}

	public String getPageTitle() {
		return "Page " + (activePage + 1);
	}

	public String getPageContent() {
		if (source == null) {
			return "This is the default page.";
		}
		if (0 == activePage)
			return "This is the first page, and you've called it using a " + source + ".";
		if (1 == activePage)
			return "This is the second page, and you've called it using a " + source + ".";
		return "This is an unknown page.";
	}

	public String getPageLook() {
		if (0 == activePage)
			return "primary";
		return "success";
	}
}
 ]]>
         </script>
        </b:tab>
        <b:tab title="live preview">
          <b:panelGrid colSpans="6,6">
            <b:panel look="primary" title="Navigation menu">
              <b:listLinks>
                <b:navLink onclick="ajax:navLinkBean.navigateToPage(0, 'b:navLink')" value="Page 1  (NavLink)" update="**:targetPage"/>
                <b:navLink onclick="ajax:navLinkBean.navigateToPage(1, 'b:navLink')" value=" Page 2 (NavLink)" update="**:targetPage"/>
              </b:listLinks>
            </b:panel>
            <b:panel title="#{navLinkBean.getPageTitle()}" id="targetPage" look="#{navLinkBean.getPageLook()}">
              #{navLinkBean.getPageContent()}
            </b:panel>
          </b:panelGrid>
        </b:tab>
      </b:tabView>
 
 <h3>Using b:navCommandLink with AJAX</h3>
 <p>Using <code>&lt;b:navCommandLink /&gt;</code> isn't much different from using  <code>&lt;b:navLink /&gt;</code>.
 You have to put it in a <code>&lt;h:form /&gt;</code>. On the plus side, you are rewarded with being allowed to use the attributes 
 <code>action</code> and <code>actionListener</code>.</p>
 <h:form>
       <b:tabView activeIndex="2"
        contentStyle="border-right: 1px solid #ddd;border-left: 1px solid #ddd;border-bottom: 1px solid #ddd;padding-right:25px;padding-left:25px;padding-top:10px"
        contentClass="show-grid">
        <b:tab title="JSF markup">
          <script type="syntaxhighlighter" class="brush: xml; toolbar: false;gutter: false; first-line: 1">
<![CDATA[
       <h:form>
         <b:panelGrid colSpans="6,6">
            <b:panel look="primary" title="Navigation menu">
              <b:listLinks>
                <b:navCommandLink onclick="ajax:navLinkBean.navigateToPage(0, 'b:navCommandLink')"
                  value="Page 1 (NavCommandLink)" update="**:targetPage" />
                <b:navCommandLink onclick="ajax:navLinkBean.navigateToPage(1, 'b:navCommandLink')"
                  value=" Page 2 (NavCommandLink)" update="**:targetPage" />
              </b:listLinks>
            </b:panel>
            <b:panel title="#{navLinkBean.getPageTitle()}" id="targetPage" look="#{navLinkBean.getPageLook()}">
               #{navLinkBean.getPageContent()}
            </b:panel>
          </b:panelGrid>
       </h:form>
 ]]>
         </script>
        </b:tab>
       <b:tab title="Java Bean">
          <script type="syntaxhighlighter" class="brush: java toolbar: false;gutter: false; first-line: 1">
<![CDATA[
@ViewScoped
@ManagedBean
public class NavLinkBean implements Serializable {
  private static final long serialVersionUID = 1L;

  private int activePage = 0;

  private String source;

  public void navigateToPage(int page, String source) {
    activePage = page;
    this.source = source;
  }

  public String getPageTitle() {
    return "Page " + (activePage + 1);
  }

  public String getPageContent() {
    if (source == null) {
      return "This is the default page.";
    }
    if (0 == activePage)
      return "This is the first page, and you've called it using a " + source + ".";
    if (1 == activePage)
      return "This is the second page, and you've called it using a " + source + ".";
    return "This is an unknown page.";
  }

  public String getPageLook() {
    if (0 == activePage)
      return "primary";
    return "success";
  }
}
 ]]>
         </script>
        </b:tab>
        <b:tab title="live preview">
          <b:panelGrid colSpans="6,6">
            <b:panel look="primary" title="Navigation menu">
              <b:listLinks>
                <b:navCommandLink onclick="ajax:navLinkBean.navigateToPage(0, 'b:navCommandLink')"
                  value="Page 1 (NavCommandLink)" update="**:targetPage" />
                <b:navCommandLink onclick="ajax:navLinkBean.navigateToPage(1, 'b:navCommandLink')"
                  value=" Page 2 (NavCommandLink)" update="**:targetPage" />
              </b:listLinks>
            </b:panel>
            <b:panel title="#{navLinkBean.getPageTitle()}" id="targetPage" look="#{navLinkBean.getPageLook()}">
               #{navLinkBean.getPageContent()}
            </b:panel>
          </b:panelGrid>
        </b:tab>
      </b:tabView>
 				</h:form>
                <br/>
                
                <h2>Reference section</h2>
                <ui:include src="NavLinkAttributes.xhtml" />
                <ui:include src="ListLinksAttributes.xhtml" />
                <b:panel look="info" rendered="false">
					<f:facet name="heading">
						<b>Skinning</b>
					</f:facet>
					<ul>
						<li>Tell the world which CSS classes can be used to change the
						look of the component.</li>
					</ul>
				</b:panel>

                
                <script type="text/javascript">
                    SyntaxHighlighter.all();
                </script>
                <br/><br/><br/>
            </ui:define>
        </ui:composition>
